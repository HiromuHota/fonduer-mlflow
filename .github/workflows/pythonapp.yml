name: Python application

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: runner
          POSTGRES_DB: pob_presidents
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v1
    - uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: 3.7
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        pip install mlflow>=1.1.0
    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Train a model
      shell: bash -l {0}
      run: |
        ./download_data.sh
        mlflow run ./ -P conn_string=postgresql://runner:postgres@localhost:5432/pob_presidents
    - name: Use the model for inference without a database
      shell: bash -l {0}
      run: |
        docker stop $(docker ps --no-trunc -q -f "ancestor=postgres:12")
        echo '{"columns": ["html_path"], "data": ["data/new/Al_Gore.html"]}' > input.json
        mlflow models predict -m fonduer_emmental_model -t json -i input.json
        mlflow models predict -m fonduer_label_model -t json -i input.json
